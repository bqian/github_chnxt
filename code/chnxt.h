int connect(void);
int connectWithAddress(char usr_addr[18], int channel);
int disconnect(void);
int setMotorZero(nxtMotorId_t id);
int setMotorZeros(void);
int moveMotorContinuousNB(nxtMotorId_t id, nxtMotorState_t dir); 
int moveMotorNB(nxtMotorId_t id, int degrees);
int moveMotorToNB(nxtMotorId_t id, int angle);
int moveNB(int degrees1, int degrees2, int degrees3);
int moveToNB(int angle1, int angle2, int angle3);
int moveToZeroNB(void);
int moveMotor(nxtMotorId_t id, int degrees);
int moveMotorTo(nxtMotorId_t id, int angle);
int move(int angle1, int angle2, int angle3);
int moveTo(int angle1, int angle2, int angle3);
int moveToZero(void);
int moveContinuousNB(nxtMotorState_t dir1, nxtMotorState_t dir2, nxtMotorState_t dir3);
int moveContinuousTime(nxtMotorState_t dir1, nxtMotorState_t dir2, nxtMotorState_t dir, int millSeconds);
int moveMotorWait(nxtMotorId_t id);
int moveWait(void);
int isConnected(void);
int isMoving(void);
//int isMotorMoving(nxtMotorId_t id);
int getMotorAngle(nxtMotorId_t id, int *angle);
int getMotorSpeed(nxtMotorId_t id, int *speed);
int getMotorSpeeds(int *speed1, int *speed2, int *speed3);
int getMotorSpeedRatio(nxtMotorId_t id, double *ratio);
int getMotorSpeedRatios(double *ratio1, double *ratio2, double *ratio3);
int getMotorState(nxtMotorId_t id, int *status);
int stopOneMotor(nxtMotorId_t id);
int stopTwoMotors(nxtMotorId_t id1, nxtMotorId_t id2);
int stopAllMotors(void);
int stopMotion(void);
int setSensor(nxtSensorId_t id, nxtSensorType_t type, nxtSensorMode_t mode);
int getSensor(nxtSensorId_t id, int *value);
int getMotorStates(void);
int setMotorSpeed(nxtMotorId_t id, int speed);
int setMotorSpeedRatio(nxtMotorId_t id, double ratio);
int setMotorSpeedRatios(double ratio1, double ratio2, double ratio3);
int vehicleMoveForwardNB(int angle);
int vehicleMoveBackwardNB(int angle);
int vehicleRotateLeftNB(int angle);
int vehicleRotateRightNB(int angle);
int vehicleMoveForward(int angle);
int vehicleMoveBackward(int angle);
int vehicleRotateLeft(int angle);
int vehicleRotateRight(int angle);
int vehicleMotionWait(void);
//int testBluetoothCom(void);
int isMotorReady(nxtMotorId_t id);
int setTwoWheelRobotSpeed(double speed, double radius);